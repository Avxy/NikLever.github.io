{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","gainScore","string","toString","audioEngine","playEffect","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","start","update","dt","gameOver","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,yBAAiB,CAPT;AAQRC,yBAAiB,CART;AASR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAVA;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAfA;AAmBRE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAnBN;AAuBRC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AAvBJ,KAHP;;AAgCLC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKT,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYW,MAAZ,GAAmB,CAAlD,CAFgB,CAEuC;AACvD;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,YAAL;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAxCI;;AA0CRC,eAAW,qBAAY;AAChB,aAAKD,KAAL,IAAc,CAAd;AACA;AACA,aAAKZ,YAAL,CAAkBc,MAAlB,GAA2B,YAAY,KAAKF,KAAL,CAAWG,QAAX,EAAvC;AACA7B,WAAG8B,WAAH,CAAeC,UAAf,CAA0B,KAAKf,UAA/B,EAA2C,KAA3C;AACH,KA/CI;;AAiDLS,kBAAc,wBAAW;AACrB;AACA,YAAIO,UAAUhC,GAAGiC,WAAH,CAAe,KAAK5B,UAApB,CAAd;AACA;AACA,aAAK6B,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;;AAEAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA,aAAKf,YAAL,GAAoB,KAAKd,eAAL,GAAuBV,GAAGwC,UAAH,MAAmB,KAAK/B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKa,KAAL,GAAa,CAAb;AACH,KA7DI;;AA+DLc,wBAAoB,8BAAY;AAC5B,YAAII,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKtB,OAAL,GAAepB,GAAGwC,UAAH,KAAkB,KAAK3B,MAAL,CAAYyB,YAAZ,CAAyB,QAAzB,EAAmCK,UAAhF;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQzC,GAAG8C,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAO5C,GAAG+C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KAxEI;;AA0ELM,SA1EK,mBA0EI,CAER,CA5EI;AA8ELC,UA9EK,kBA8EGC,EA9EH,EA8EO;AACX,YAAI,KAAK3B,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAC7B,iBAAK2B,QAAL;AACA;AACH;AACD,aAAK5B,KAAL,IAAc2B,EAAd;AACH,KApFI;;;AAsFLC,cAAU,oBAAY;AAClB,aAAKtC,MAAL,CAAYuC,cAAZ,GADkB,CACY;AAC9BpD,WAAGqD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AAzFI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // this property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // the random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n        // ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player node for obtaining the jump height of the main character and controlling the movement switch of the main character\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    onLoad: function () {\n        // obtain the anchor point of ground level on the y axis\n        this.groundY = this.ground.y + this.ground.height/2;   // this.ground.top may also work\n        // generate a new star\n        this.timer = 0;\n        this.starDuration = 0;\n        this.spawnNewStar();\n        this.score = 0;\n    },\n\n\tgainScore: function () {\n        this.score += 1;\n        // update the words of the scoreDisplay Label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n    \n    spawnNewStar: function() {\n        // generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n        // put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n        // set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n        \n        newStar.getComponent('Star').game = this;\n        \n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function () {\n        var randX = 0;\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight;\n        // according to the width of the screen, randomly obtain an anchor point of star on the x axis\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n        // return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n\n    start () {\n\n    },\n\n    update (dt) {\n    \tif (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    },\n    \n    gameOver: function () {\n        this.player.stopAllActions(); // stop the jumping action of the player node\n        cc.director.loadScene('game');\n    }\n});\n"]}