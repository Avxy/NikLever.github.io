{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/Bucket.js"],"names":["cc","Class","extends","Component","properties","maxMoveSpeed","accel","flipped","onLoad","accLeft","accRight","xSpeed","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","d","KEY_UP","playAnimation","name","anim","getComponent","Animation","currentClip","stop","play","stopAnimation","start","update","dt","Math","abs","node","scaleX","x"],"mappings":"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","file":"Bucket.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n    \t// maximal movement speed\n        maxMoveSpeed: 0,\n        // acceleration\n        accel: 0,\n        //facing right if true\n        flipped: false\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n    \t// switch off acceleration direction\n        this.accLeft = false;\n        this.accRight = false;\n        // current horizontal speed of main character\n        this.xSpeed = 0;\n    \tthis.setInputControl();\n    },\n    \n\tsetInputControl() {\n        var self = this;\n        // add keyboard event listener\n        // When there is a key being pressed down, judge if it's the designated directional button and set up acceleration in the corresponding direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\n            switch(event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = true;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = true;\n                    break;\n            }\n        });\n\n        // when releasing the button, stop acceleration in this direction\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\n            switch(event.keyCode) {\n                case cc.KEY.a:\n                    self.accLeft = false;\n                    break;\n                case cc.KEY.d:\n                    self.accRight = false;\n                    break;\n            }\n        });        \n    },\n    \n    playAnimation(name){\n    \tconst anim = this.getComponent(cc.Animation);\n    \tif (anim.currentClip!==null && anim.currentClip.name==name) return;\n    \tanim.stop();\n    \tanim.play(name);\n    },\n    \n    stopAnimation(name){\n    \tconst anim = this.getComponent(cc.Animation);\n    \tanim.stop(name);\n    },\n    \n    start () {\n\n    },\n\t\n    update (dt) {\n     \t// update speed of each frame according to the current acceleration direction\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }else{\n        \tthis.xSpeed *= 0.9;\n        \tif (Math.abs(this.xSpeed)<3){\n        \t\tthis.xSpeed = 0;\n        \t\tthis.playAnimation('stand');\n        \t}\n        }\n        if (this.xSpeed!=0){\n        \tif (this.xSpeed<0){\n        \t\tthis.node.scaleX = -1;\n        \t}else{\n        \t\tthis.node.scaleX = 1;\n        \t}\n        \tthis.playAnimation('walk');\n        } \n        \n        // restrict the movement speed of the main character to the maximum movement speed\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reaches its limit, use the max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // update the position of the main character according to the current speed\n        this.node.x += this.xSpeed * dt;\n    },\n});\n"]}